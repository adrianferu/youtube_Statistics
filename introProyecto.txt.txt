En qué consiste este proeycto?


	Extraer estadísticas desde cualquier canald e youtube

Tecnologías a usar:

	AWS Lambda:		Para extraer información y cargar bloques de S3

	API de youtube:		

	Amazon retina:		Para hacer analítica y consultar  por canales


	Google Cloud Platform:	Específicametne una tecnología llamada GOOGLE CLOUD CONSOLE



1 Paso:

Tuvimos que crear una cuenta gratuita en Google Cloud Platform: recuedas que hace unos meses te habías suscrito a google for developers? -
Pues bien, parece que todos los servcis de google developers/maps/cloud están itnegrados todos en un solo servicios, de manera reciente.

Google Cloud Platform es el equivalente en GOOGLE e Amazon Web Servieces (AWS)

Accedemos a una API llamada:

			Youtube data API V3

Ingresamos al proeycto 				ESTADISTICAS YOUTUBE

Nos vamos a credenciales: 

		Damos en la opción:			'CREAR CLAVE API'

		Luego de esto nos aparece un cuadro con la API KEY. Sin emabrgo debemremos protegerla:	
			Esto debido a que, si noe stablecemos restricciones, cualquier persona que tenga acceso a esta la podría usar,
			haciendo que podamos dar info sensible o que se coman nuestros créditos y terminemos pagando de más

			Para dar estas restricciones nos vamos a la opción  'Editar clave' (en el símbolo : que está al lado derecho de la API KEY)

			Seleccionas la opción 'Direcciones IP': El profe nos explica que es la mejor opción para cuandoe stabmos trabajando con apps gratuitas

			Como paso final debes agregar tu dirección IP de manera que se al aúnica con el permiso para usar tu clave:

			en este caso sería esta: la de Jotaro 			172.24.145.159


	Y voilá! ya está lista la API apra que podamos hacer peticiones desde nuestra dirección IP, y que nadie que tenga esta API key pueda usarla
	A MENOS de que esté en nuestro computador




Cuando estamos en la parte de la adminsitración de las credenciales debemos asegurarnos de RESTRINGIR EL USO DE NUESTRA API:

2 PASO: Buscamos el ID del canald

	Ene ste caso queremos extraer las estadísticas del canald e youtube del Dr. Carlos Jaramillo

		Inspeccionar --> CTRL + F -->  En la casilla de búsqueda escribimos  		twitter:url  -->  
			refrescamos la página y luego, en la sección del html de la página, en la etiqueta '<meta name ...>' copiamos --
			--y pegamos lo que tenemos
				c


2 Paso. AUTOMATIZACIÓN DEL PROCESAMIENTO DE EXTRACCIÓN USANDO AWS Lambda

	Ya tewniendo tu cuenta creada en Amazon Web Services, vamos a usar la función AWS LAMBDA

	2.1. CREAR UNA FUNCIÓN LAMBDA:
			Nombre de la función:	Demo_estadisticasYoutube

			Tiempo de ejecición (elegimos el lenguaje):		Python 3.10

			Arquitectura:		x96_4

			Permisos -->  Rol de ejecución (como nunca antes habíamos usado AWS, vamos a hacerlo con un rol nuevo)


			Ya con esto nos aparece creada la función LAMBDA	Demo_estadisticasYoutube

			Seleccionamos capas (i.e. layers)

				Anadimos una capas	
						En la opción "Elija una capa" debemos tener seleccionada 'Capas de AWS'

							Luego escogemos una llamada 		"AWSSDKPandas-Python3.10" y en Versión, yo escogí la versión 3 ([porque fue la única que-
							me dejó, ya que el profe en el vídeo escogio la 1]). Habiendo hecho esto ya PODEMOS HACER USO DE LA LIBRERÍA PANDAS EN NUESTRA FUNCI[opción0
							LAMBDA]

	2.2. CREACIÓN DE BUCKETS
					El profe nos habla de la creación de Buckets por una opción llamada 'Amazon S3':	
					Nos hablan DE CREAR 2 BUCKETS:
						Uno que va a ser nuestro bucket de entrada, donde vamos a guardar el dataframe con todos los canales

						Otro que va a ser el bucket de desino (donde van a estar las estadísticas)

							NombrePrimerBucket:		demo-inputyoutube

							Región de AWS: 	Se deja por defecto EE.UU. Norte de Virginia

							Propiedad de objetos:		ASL deshabilitada (se deja por defecto)

							todo lo demás también se deja pro defecto y se da 'crear bucket'


							NombreSegundoBucket: 	demo-outputyoutube

							mISMAS CONDIGURACIONES del primero


	2.3. VOLVEMOS A LA FUNCIÓN LAMBDA Y EDITAMOS CONFIGURACION

		Necesitamos editar:
				Mmeoria, almacenamieno efímero y tiempo de espera:

				Configuracion --> editar -->  Aparece un menú de configuraci'n básica:

								mMEORIA:		512Mb

								ALMACENAMIENTO EFIMERO:			512Mb

								TIEMPO DE ESPERA:				2min		(el profe nos recuerda que son 4 canales y que los tiempos de espera pueden
								varían entre 1-3 minutos
								
								
	2.4.	CONFIURAMOS LAS VARIABLES DE ENTORNO

		Concepto relacionado a las API keys y a los bucket de entrada y de destino.
		
		DEBREREMOS CREAR VCARIABLES DE ENTORNO PARA LOS BUCKETS:

			BUCKET_INPUT:		Para el bucket de entrada (demo-inputyoutube)


				BUCKET_DESTINY:	pARA EL bucket de salidas (demo-outputyoutube)

				APIKEY:		AIzaSyBeCzbwYh9uW7pKu46qi0iHPYsDbDS7Lss


				FILE_CHANNELS:		channels_to_analize.csv




3 PASO.  Ya con la función lambda terminada, los buckets listos y las variables de entorno asociadas a los buckets, APIKEY y el archivo 
--'channels_to_analize.csv' (que es una tabla con dos columnas: el nombre delos canales y sus id's) procedemos a hacer las ediciones sobnre la función
lambda:

Nos vamos a nuestra función -->  código --> Aquí vemos una consola. Debemos copiar las librerías -de python-que vamos a usar
	Nota: En el ejercicio estas NO SON las mismas de las del notebook. Alginas sí, pero no todas
			Ver archivo lambda_demoAdrian.py


			Nota: 

			Revisar para qué sirve esta línea de códigi:

			#Creación de cliente
			 s3_client = boto3.client('s3')


			 PUEDES SEGUIR LA DOCUMENTACIÓN RESTANTE DESDE LA CUENTA DE AWS.


4 PASO: ELIMMINACIÓN DE LAS RESTRICCIÓN DE LA APIKEY: Para qué? para que nos deje usarla desde la nube!!!






IMPORTANTEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
NOTA ADICIONAL: Antes de hacer los tests del pipeline, recuerda que en AWS debes haber cargado el archivo:

			channels_to_analize.csv,		DENTRO DEL BUCKET  demo-inputyoutube  IMPORTANTEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE

			






